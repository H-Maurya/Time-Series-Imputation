{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"16ybq9w-Gt6X7judIBSIrOjnRhbGMijWC","authorship_tag":"ABX9TyObwKQK8ADvj5jsyw1fKQio"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"-S-PgElT6JTx","executionInfo":{"status":"ok","timestamp":1680958252476,"user_tz":-330,"elapsed":3091,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from sklearn.experimental import enable_iterative_imputer\n","from sklearn.impute import IterativeImputer\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/Dataset/temprel.csv')"],"metadata":{"id":"ccf9sySH6eo9","executionInfo":{"status":"ok","timestamp":1680958252478,"user_tz":-330,"elapsed":12,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df.pop('timestamp')\n","#Create a copy of dataset\n","data_imputed = df.copy()\n","\n","# Define the imputation model\n","imputer = IterativeImputer(max_iter=10, random_state=0)\n","# Define the number of imputations\n","n_imputations = 5"],"metadata":{"id":"FyzDQdVW6gF0","executionInfo":{"status":"ok","timestamp":1680958252479,"user_tz":-330,"elapsed":11,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["for i in range(n_imputations):\n","    # Impute missing values using the MICE algorithm\n","    data_imputed.iloc[:, :] = imputer.fit_transform(data_imputed)\n","\n","    # Store the imputed values in a new dataframe\n","    data_imputed_i = pd.DataFrame(imputer.transform(df),\n","                                   columns=df.columns)\n","\n","    # Merge the imputed values with the original dataset\n","    data_imputed = data_imputed.combine_first(data_imputed_i)"],"metadata":{"id":"6sYlD9qj6hGt","executionInfo":{"status":"ok","timestamp":1680958253298,"user_tz":-330,"elapsed":829,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["data_imputed.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"G4XoNkYh6iWs","executionInfo":{"status":"ok","timestamp":1680958253299,"user_tz":-330,"elapsed":47,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}},"outputId":"246b5800-e9fb-40d8-da90-d4c19788c704"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        open       high        low       close  adjusted_close    volume  \\\n","0  2357.0000  2357.0000  2321.6001  2336.35010       2336.3501  127318.0   \n","1  2357.3501  2370.8000  2334.0500  2355.39990       2355.3999   88852.0   \n","2  2311.3000  2359.6001  2307.1499  2351.80000       2351.8000  268850.0   \n","3  2312.0000  2327.0000  2293.1001  2306.00018       2305.8999  225094.0   \n","4  2325.0000  2325.0000  2306.7500  2311.50000       2311.5000  206263.0   \n","\n","   dividend_amount  split_coefficient  \n","0              0.0                1.0  \n","1              0.0                1.0  \n","2              0.0                1.0  \n","3              0.0                1.0  \n","4              0.0                1.0  "],"text/html":["\n","  <div id=\"df-7838105a-20cb-4647-b404-cbccd9c6ae74\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>adjusted_close</th>\n","      <th>volume</th>\n","      <th>dividend_amount</th>\n","      <th>split_coefficient</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2357.0000</td>\n","      <td>2357.0000</td>\n","      <td>2321.6001</td>\n","      <td>2336.35010</td>\n","      <td>2336.3501</td>\n","      <td>127318.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2357.3501</td>\n","      <td>2370.8000</td>\n","      <td>2334.0500</td>\n","      <td>2355.39990</td>\n","      <td>2355.3999</td>\n","      <td>88852.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2311.3000</td>\n","      <td>2359.6001</td>\n","      <td>2307.1499</td>\n","      <td>2351.80000</td>\n","      <td>2351.8000</td>\n","      <td>268850.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2312.0000</td>\n","      <td>2327.0000</td>\n","      <td>2293.1001</td>\n","      <td>2306.00018</td>\n","      <td>2305.8999</td>\n","      <td>225094.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2325.0000</td>\n","      <td>2325.0000</td>\n","      <td>2306.7500</td>\n","      <td>2311.50000</td>\n","      <td>2311.5000</td>\n","      <td>206263.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7838105a-20cb-4647-b404-cbccd9c6ae74')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7838105a-20cb-4647-b404-cbccd9c6ae74 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7838105a-20cb-4647-b404-cbccd9c6ae74');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# Create a new dataframe with only the 'Close' column \n","data = data_imputed.filter(['close'])\n","# Convert the dataframe to a numpy array\n","dataset = data.values\n","\n","# Get the number of rows to train the model on\n","training_data_len = int(np.ceil( len(dataset) * .6 ))\n","\n","window_size = 60\n","training_data_len"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hpPgzaAg6jxs","executionInfo":{"status":"ok","timestamp":1680958253301,"user_tz":-330,"elapsed":42,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}},"outputId":"bc11c30d-f820-4148-b2ab-0f7df1df1999"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2679"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Scale the data\n","from sklearn.preprocessing import MinMaxScaler, StandardScaler\n","\n","# create scaler\n","scaler = StandardScaler()\n","# fit and transform in one step\n","scaled_data = scaler.fit_transform(dataset)\n","\n","print ('scaled_data.shape',len(scaled_data))\n","scaled_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_GzC1GHB6lIE","executionInfo":{"status":"ok","timestamp":1680958253302,"user_tz":-330,"elapsed":28,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}},"outputId":"0319b935-8bbe-496c-e89b-f7514df1d478"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["scaled_data.shape 4464\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[ 1.6424274 ],\n","       [ 1.67335268],\n","       [ 1.66750863],\n","       ...,\n","       [-1.50730654],\n","       [-1.50621416],\n","       [-1.49128724]])"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# Create the training data set \n","# Create the scaled training data set\n","train_data = scaled_data[0:int(training_data_len)]\n","# Split the data into x_train and y_train data sets\n","x_train = []\n","y_train = []\n","\n","for i in range(window_size, len(train_data)):\n","    x_train.append(train_data[i-window_size:i, 0])\n","    y_train.append(train_data[i, 0])\n","    if i<= window_size + 1:\n","        print('x_train',x_train)\n","        print('\\ny_train',y_train)\n","        print()\n","        \n","# Convert the x_train and y_train to numpy arrays \n","x_train, y_train = np.array(x_train), np.array(y_train)\n","\n","# Reshape the data\n","x_train = np.reshape(x_train, (x_train.shape[0], x_train.shape[1], 1))\n","print ('x_train.shape:',x_train.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pugML-wP6mQx","executionInfo":{"status":"ok","timestamp":1680958253303,"user_tz":-330,"elapsed":23,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}},"outputId":"35a5746e-ce4c-42a1-b314-8d99df61d4eb"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["x_train [array([1.6424274 , 1.67335268, 1.66750863, 1.59315759, 1.60208595,\n","       1.63057648, 1.62692384, 1.645187  , 1.66396628, 1.66669694,\n","       1.64469998, 1.71807728, 1.77035033, 1.79380866, 1.81507493,\n","       1.86117942, 1.86686129, 1.87327352, 1.81832171, 1.81483805,\n","       1.86280281, 1.94949176, 2.00217081, 2.06483373, 1.96856661,\n","       1.93001106, 1.93755967, 2.00062859, 2.03009299, 1.98634275,\n","       1.97717058, 1.98025503, 1.98122906, 1.94786836, 1.91061153,\n","       2.03455731, 2.04510936, 2.104769  , 2.0423784 , 2.01377823,\n","       2.03593736, 2.0946228 , 2.10972051, 2.08473843, 2.08520746,\n","       2.15079232, 2.15144151, 2.21369874, 2.20493259, 2.26954325,\n","       2.27003043, 2.28537132, 2.25071207, 2.24584189, 2.09811326,\n","       2.04210625, 1.99973573, 2.01247935, 1.99360064, 2.06645712])]\n","\n","y_train [2.072544839979083]\n","\n","x_train [array([1.6424274 , 1.67335268, 1.66750863, 1.59315759, 1.60208595,\n","       1.63057648, 1.62692384, 1.645187  , 1.66396628, 1.66669694,\n","       1.64469998, 1.71807728, 1.77035033, 1.79380866, 1.81507493,\n","       1.86117942, 1.86686129, 1.87327352, 1.81832171, 1.81483805,\n","       1.86280281, 1.94949176, 2.00217081, 2.06483373, 1.96856661,\n","       1.93001106, 1.93755967, 2.00062859, 2.03009299, 1.98634275,\n","       1.97717058, 1.98025503, 1.98122906, 1.94786836, 1.91061153,\n","       2.03455731, 2.04510936, 2.104769  , 2.0423784 , 2.01377823,\n","       2.03593736, 2.0946228 , 2.10972051, 2.08473843, 2.08520746,\n","       2.15079232, 2.15144151, 2.21369874, 2.20493259, 2.26954325,\n","       2.27003043, 2.28537132, 2.25071207, 2.24584189, 2.09811326,\n","       2.04210625, 1.99973573, 2.01247935, 1.99360064, 2.06645712]), array([1.67335268, 1.66750863, 1.59315759, 1.60208595, 1.63057648,\n","       1.62692384, 1.645187  , 1.66396628, 1.66669694, 1.64469998,\n","       1.71807728, 1.77035033, 1.79380866, 1.81507493, 1.86117942,\n","       1.86686129, 1.87327352, 1.81832171, 1.81483805, 1.86280281,\n","       1.94949176, 2.00217081, 2.06483373, 1.96856661, 1.93001106,\n","       1.93755967, 2.00062859, 2.03009299, 1.98634275, 1.97717058,\n","       1.98025503, 1.98122906, 1.94786836, 1.91061153, 2.03455731,\n","       2.04510936, 2.104769  , 2.0423784 , 2.01377823, 2.03593736,\n","       2.0946228 , 2.10972051, 2.08473843, 2.08520746, 2.15079232,\n","       2.15144151, 2.21369874, 2.20493259, 2.26954325, 2.27003043,\n","       2.28537132, 2.25071207, 2.24584189, 2.09811326, 2.04210625,\n","       1.99973573, 2.01247935, 1.99360064, 2.06645712, 2.07254484])]\n","\n","y_train [2.072544839979083, 2.0572039516347793]\n","\n","x_train.shape: (2619, 60, 1)\n"]}]},{"cell_type":"code","source":["from keras.models import Sequential\n","from keras.layers import Dense, LSTM\n","import tensorflow as tf\n","\n","def build_LSTM_model():\n","    input = tf.keras.layers.Input(\n","        shape=(x_train.shape[1], 1), name =\"input\"\n","    )\n","    x = tf.keras.layers.LSTM(128, return_sequences=True)(input)\n","    \n","    x = tf.keras.layers.LSTM(64, return_sequences=False, dropout=0.5)(x)\n","    \n","    x = tf.keras.layers.Dense(25 , activation=\"relu\", name =\"dense_1\")(x)\n","    \n","    output = tf.keras.layers.Dense(1, name=\"last_dense\")(x)\n","               \n","    model = tf.keras.Model(inputs=input, outputs=output)\n","    \n","    return model\n","\n","LSTM_model = build_LSTM_model()\n","LSTM_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4-uujjnK6pG1","executionInfo":{"status":"ok","timestamp":1680958264212,"user_tz":-330,"elapsed":10927,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}},"outputId":"ec6cb03b-b086-4ed6-f32f-cb6cd5cfaff0"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input (InputLayer)          [(None, 60, 1)]           0         \n","                                                                 \n"," lstm (LSTM)                 (None, 60, 128)           66560     \n","                                                                 \n"," lstm_1 (LSTM)               (None, 64)                49408     \n","                                                                 \n"," dense_1 (Dense)             (None, 25)                1625      \n","                                                                 \n"," last_dense (Dense)          (None, 1)                 26        \n","                                                                 \n","=================================================================\n","Total params: 117,619\n","Trainable params: 117,619\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["y_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TQz4NnpG6rfk","executionInfo":{"status":"ok","timestamp":1680958264215,"user_tz":-330,"elapsed":23,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}},"outputId":"793c1cd7-2a2f-4108-dff0-679168409e6c"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 2.07254484,  2.05720395,  2.08131115, ..., -0.9356813 ,\n","       -0.97366883, -0.97188293])"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["epochs = 50\n","batch_size = 500\n","early_stopping_patience = 17\n","\n","\n","# Compile the model\n","LSTM_model.compile(optimizer='adam', loss='mean_squared_error')\n","\n","# Train the model\n","history = LSTM_model.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ivm8TKN96stc","executionInfo":{"status":"ok","timestamp":1680958279038,"user_tz":-330,"elapsed":14836,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}},"outputId":"a551cc26-7644-4ca8-a08d-a248e682c693"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","6/6 [==============================] - 9s 25ms/step - loss: 0.6378\n","Epoch 2/50\n","6/6 [==============================] - 0s 19ms/step - loss: 0.0941\n","Epoch 3/50\n","6/6 [==============================] - 0s 18ms/step - loss: 0.0541\n","Epoch 4/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0478\n","Epoch 5/50\n","6/6 [==============================] - 0s 18ms/step - loss: 0.0293\n","Epoch 6/50\n","6/6 [==============================] - 0s 15ms/step - loss: 0.0225\n","Epoch 7/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0199\n","Epoch 8/50\n","6/6 [==============================] - 0s 17ms/step - loss: 0.0161\n","Epoch 9/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0140\n","Epoch 10/50\n","6/6 [==============================] - 0s 17ms/step - loss: 0.0136\n","Epoch 11/50\n","6/6 [==============================] - 0s 18ms/step - loss: 0.0126\n","Epoch 12/50\n","6/6 [==============================] - 0s 17ms/step - loss: 0.0125\n","Epoch 13/50\n","6/6 [==============================] - 0s 17ms/step - loss: 0.0119\n","Epoch 14/50\n","6/6 [==============================] - 0s 17ms/step - loss: 0.0117\n","Epoch 15/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0118\n","Epoch 16/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0115\n","Epoch 17/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0116\n","Epoch 18/50\n","6/6 [==============================] - 0s 17ms/step - loss: 0.0116\n","Epoch 19/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0113\n","Epoch 20/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0107\n","Epoch 21/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0104\n","Epoch 22/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0106\n","Epoch 23/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0107\n","Epoch 24/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0104\n","Epoch 25/50\n","6/6 [==============================] - 0s 18ms/step - loss: 0.0107\n","Epoch 26/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0102\n","Epoch 27/50\n","6/6 [==============================] - 0s 17ms/step - loss: 0.0103\n","Epoch 28/50\n","6/6 [==============================] - 0s 17ms/step - loss: 0.0101\n","Epoch 29/50\n","6/6 [==============================] - 0s 17ms/step - loss: 0.0100\n","Epoch 30/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0100\n","Epoch 31/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0100\n","Epoch 32/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0094\n","Epoch 33/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0095\n","Epoch 34/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0095\n","Epoch 35/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0094\n","Epoch 36/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0095\n","Epoch 37/50\n","6/6 [==============================] - 0s 18ms/step - loss: 0.0093\n","Epoch 38/50\n","6/6 [==============================] - 0s 18ms/step - loss: 0.0091\n","Epoch 39/50\n","6/6 [==============================] - 0s 17ms/step - loss: 0.0089\n","Epoch 40/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0093\n","Epoch 41/50\n","6/6 [==============================] - 0s 16ms/step - loss: 0.0090\n","Epoch 42/50\n","6/6 [==============================] - 0s 15ms/step - loss: 0.0093\n","Epoch 43/50\n","6/6 [==============================] - 0s 15ms/step - loss: 0.0089\n","Epoch 44/50\n","6/6 [==============================] - 0s 15ms/step - loss: 0.0086\n","Epoch 45/50\n","6/6 [==============================] - 0s 15ms/step - loss: 0.0087\n","Epoch 46/50\n","6/6 [==============================] - 0s 15ms/step - loss: 0.0088\n","Epoch 47/50\n","6/6 [==============================] - 0s 14ms/step - loss: 0.0086\n","Epoch 48/50\n","6/6 [==============================] - 0s 14ms/step - loss: 0.0083\n","Epoch 49/50\n","6/6 [==============================] - 0s 15ms/step - loss: 0.0082\n","Epoch 50/50\n","6/6 [==============================] - 0s 15ms/step - loss: 0.0085\n"]}]},{"cell_type":"code","source":["# list all data in history\n","print(history.history.keys())\n","\n","# summarize history for loss\n","\n","fig, ax = plt.subplots()\n","plt.plot(history.history['loss'])\n","plt.title('model loss')\n","plt.ylabel('loss')\n","plt.xlabel('epoch')\n","plt.legend(['train'], loc='upper left')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"oFWPHRbF6uNM","executionInfo":{"status":"ok","timestamp":1680958279039,"user_tz":-330,"elapsed":46,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}},"outputId":"e4e96cc2-95d4-48e7-9340-9447935ac42e"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["dict_keys(['loss'])\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Create the testing data set\n","# Create a new array containing scaled values from index 1543 to 2002 \n","test_data = scaled_data[training_data_len - window_size: ]\n","print ('len(test_data):', len(test_data))\n","\n","# Create the data sets x_test and y_test\n","x_test = []\n","y_test = dataset[training_data_len:, :]\n","for i in range(window_size, len(test_data)):\n","    x_test.append(test_data[i-window_size:i, 0])\n","    \n","# Convert the data to a numpy array\n","x_test = np.array(x_test)\n","\n","# Reshape the data\n","x_test = np.reshape(x_test, (x_test.shape[0], x_test.shape[1], 1 ))\n","\n","# Get the models predicted price values \n","predictions = LSTM_model.predict(x_test)\n","predictions = scaler.inverse_transform(predictions)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RvMHHEPI6vrD","executionInfo":{"status":"ok","timestamp":1680958280780,"user_tz":-330,"elapsed":1775,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}},"outputId":"d06ae14c-515a-4b81-efe1-3a9ae0825ec0"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["len(test_data): 1845\n","56/56 [==============================] - 1s 3ms/step\n"]}]},{"cell_type":"code","source":["# Plot the data\n","train = data[:training_data_len]\n","test = data[training_data_len:]\n","test['Predictions'] = predictions\n","\n","# Visualize the data\n","plt.figure()\n","plt.title('Model')\n","plt.ylabel('Close Price ', fontsize=18)\n","#plt.plot(train['Close'])\n","plt.plot(test[['close', 'Predictions']])\n","plt.legend(['Close', 'Predictions'], loc='upper right')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":556},"id":"pO4-hugp6w6W","executionInfo":{"status":"ok","timestamp":1680958280782,"user_tz":-330,"elapsed":32,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}},"outputId":"9d3d4a64-a2a8-4350-bbe5-e4f9760cdf3d"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-14-6511bb59e7ba>:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  test['Predictions'] = predictions\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score, mean_absolute_percentage_error\n","mae = mean_absolute_error(test['Predictions'],y_test)\n","mse = mean_squared_error(test['Predictions'], y_test)\n","rmse = np.sqrt(mse)\n","mape = mean_absolute_percentage_error(test['Predictions'],y_test)\n","r = r2_score(test['Predictions'], y_test)"],"metadata":{"id":"8Kh_9mHn6yAL","executionInfo":{"status":"ok","timestamp":1680958280783,"user_tz":-330,"elapsed":23,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["print('Mean Absolute Error:', mae)\n","print('Mean Squared Error:', mse)\n","print('Root Mean Squared Error:', rmse)\n","print('Mean Absolute Percentage Error:', mape)\n","print('R-Squared Score = {}'.format(r))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4WM6_KGS6yF8","executionInfo":{"status":"ok","timestamp":1680958280785,"user_tz":-330,"elapsed":24,"user":{"displayName":"Harshit Maurya","userId":"05328031702844338094"}},"outputId":"a71e195b-14a6-4398-cee0-757fa7da1d81"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error: 51.76269438816286\n","Mean Squared Error: 7365.618573878014\n","Root Mean Squared Error: 85.8231820307195\n","Mean Absolute Percentage Error: 0.04326181286226711\n","R-Squared Score = 0.9808115409836444\n"]}]}]}